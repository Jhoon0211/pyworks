파이썬 - 환경설정
접근성이 좋다.

www.python.org
- python 3 (인터프리터, 라이브러리, 툴(IDLE))

파이썬 쉘
- python 명령어를 적으면 쉘 상태임
- 입출력 (print함수 생략) 할 수 있음
- 저장이 안됨 ->  Editor(IDE)
- 종료(quit) 함수 (ctrl + z)

출력방법
입력방법
세미콜론 없음
자료형 키워드(var, int) 없음

변수
var.py

10진수 - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
16진수 - 1 2 3 4 5 6 7 8 9  A  B   C  D  E   F  10

조건 - if
반복 - while, for

if ~ elif ~ else
int(문자형, or 실수) -> 정수로 변환

bmi의 값을 소수 2째 자리까지 출력하라
print(f'{bmi:.2f}')

파이썬의 자료형 (구조)
 
자료 1개 - 변수
자료 여러개 - 컬렉션(collection)
리스트(list), 딕셔너리(dictionary), 튜플(tuple), 셋(set)

리스트
문자열 - 1차원 배열

리스트 - ['a', 'b', 'c']
튜플 - ('a', 'b', 'c')
셔너리
합


math 모듈 - math.celi(), 
round()

t.onkeypress(turn_right, "Right")
t.setheading(0) -> 오른쪽
t.setheading(90) -> 위
t.setheading(180) -> 왼쪽
t.setheading(270) -> 아래쪽

t.heading() - 현재의 머리 각도
t.distance() - 거리
t.write() - 문자 출력

forward(픽셀크기) - 직진
t.left(각도)
t.speed(0~10)
t.up
t.down


 * 객체지향 언어의 특성 - 추상화, 캡슐화, 상속, 다형성
class 클래스A:
	변수
	함수 (def)


 * 클래스A를 상속받은 것
class 클래스 이름(A):
	변수
	함수 (def)

상속관계 - 부모의 멤버, 함수 재사용
부모클래스
자식클래스

재귀함수(recursive function) - 콜백함수
 - 자기 자신을 호출
람다함수(lamda function)

피보나치 수열
첫째 둘째 셋째
1   1   2   3   5   8   13 ...

def fibo(n):
     if n <= 2:   fibo(0) fibo(1) fibo(2)
        return 1
     else:
        return fibo(n-2) + fibo(n-1)


 ======================================
flask 설치방법
1. pip install flask
2. python.exe -m pip install --upgrade pip


템플릿 언어
출력 - {{ }}
"{{url_for('파일경로', file-name='파일이름')}}"

명령문 사용 - {% for ~ in %}
실행문 - {% end for %}

1. 경로 (url) 설정
2. 제어함수
3. html 작성


lambda

pickle 모듈
객체의 형태를 그대로 유지하면서
파일을 읽고 쓰는 모듈